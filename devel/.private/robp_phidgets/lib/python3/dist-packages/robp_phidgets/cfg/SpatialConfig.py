## *********************************************************
##
## File autogenerated for the robp_phidgets package
## by the dynamic_reconfigure package.
## Please do not edit.
##
## ********************************************************/

from dynamic_reconfigure.encoding import extract_params

inf = float('inf')

config_description = {'name': 'Default', 'type': '', 'state': True, 'cstate': 'true', 'id': 0, 'parent': 0, 'parameters': [{'name': 'frame_id', 'type': 'str', 'default': 'imu_link', 'level': 0, 'description': 'The header frame ID to use when publishing messages', 'min': '', 'max': '', 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'std::string', 'cconsttype': 'const char * const'}, {'name': 'data_rate', 'type': 'double', 'default': 500.0, 'level': 0, 'description': 'The number of milliseconds between acquisitions of data on the device', 'min': 1.0, 'max': 500.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'algorithm', 'type': 'int', 'default': 1, 'level': 0, 'description': 'Name of the spatial algorithm used for orientation estimation, only used if use_orientation is set to true', 'min': 0, 'max': 2, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': "{'enum': [{'name': 'None', 'type': 'int', 'value': 0, 'srcline': 8, 'srcfile': '/home/robot/dd2419_ws/src/robp_robot/robp_phidgets/cfg/Spatial.cfg', 'description': 'No AHRS algorithm is used', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'AHRS', 'type': 'int', 'value': 1, 'srcline': 9, 'srcfile': '/home/robot/dd2419_ws/src/robp_robot/robp_phidgets/cfg/Spatial.cfg', 'description': 'AHRS algorithm, incorporating magnetometer data for yaw correction', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'IMU', 'type': 'int', 'value': 2, 'srcline': 10, 'srcfile': '/home/robot/dd2419_ws/src/robp_robot/robp_phidgets/cfg/Spatial.cfg', 'description': 'IMU algorithm, using gyro and accelerometer, but not magnetometer', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'Controls the AHRS algorithm'}", 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'ahrs_angular_velocity_threshold', 'type': 'double', 'default': 0.5, 'level': 0, 'description': 'Parameter for AHRS orientation estimation, only used if use_orientation is set to true', 'min': 0.0, 'max': 10.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'ahrs_angular_velocity_delta_threshold', 'type': 'double', 'default': 0.1, 'level': 0, 'description': 'Parameter for AHRS orientation estimation, only used if use_orientation is set to true', 'min': 0.0, 'max': 10.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'ahrs_acceleration_threshold', 'type': 'double', 'default': 0.05, 'level': 0, 'description': 'Parameter for AHRS orientation estimation, only used if use_orientation is set to true', 'min': 0.0, 'max': 10.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'ahrs_mag_time', 'type': 'double', 'default': 120.0, 'level': 0, 'description': 'Parameter for AHRS orientation estimation, only used if use_orientation is set to true', 'min': 0.0, 'max': 1000.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'ahrs_accel_time', 'type': 'double', 'default': 120.0, 'level': 0, 'description': 'Parameter for AHRS orientation estimation, only used if use_orientation is set to true', 'min': 0.0, 'max': 1000.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'ahrs_bias_time', 'type': 'double', 'default': 1.25, 'level': 0, 'description': 'Parameter for AHRS orientation estimation, only used if use_orientation is set to true', 'min': 0.0, 'max': 1000.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'heating_enabled', 'type': 'bool', 'default': False, 'level': 0, 'description': 'Use the internal heating element', 'min': False, 'max': True, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'linear_acceleration_stdev', 'type': 'double', 'default': 280.0, 'level': 0, 'description': 'The standard deviation to use for the linear acceleration when publishing the message (ug)', 'min': 0.0, 'max': 1000.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'angular_velocity_stdev', 'type': 'double', 'default': 0.095, 'level': 0, 'description': 'The standard deviation to use for the angular velocity when publishing the message (deg/s)', 'min': 0.0, 'max': 1000.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'magnetic_field_stdev', 'type': 'double', 'default': 1.1, 'level': 0, 'description': 'The standard deviation to use for the magnetic field when publishing the message (milligauss)', 'min': 0.0, 'max': 1000.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'time_resynchronization_interval_ms', 'type': 'int', 'default': 5000, 'level': 0, 'description': "The number of milliseconds to wait between resynchronizing the time on the Phidgets spatial with the local time. Larger values have less 'jumps', but will have more timestamp drift. Setting this to 0 disables resynchronization", 'min': 0, 'max': 100, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'cc_mag_field', 'type': 'double', 'default': 0.52859, 'level': 0, 'description': "Ambient magnetic field calibration value; see device's user guide for information on how to calibrate", 'min': 0.0, 'max': 1000.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'cc_offset0', 'type': 'double', 'default': 0.03921, 'level': 0, 'description': "Calibration offset value 0; see device's user guide for information on how to calibrate", 'min': 0.0, 'max': 1000.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'cc_offset1', 'type': 'double', 'default': 0.19441, 'level': 0, 'description': "Calibration offset value 1; see device's user guide for information on how to calibrate", 'min': 0.0, 'max': 1000.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'cc_offset2', 'type': 'double', 'default': -0.03493, 'level': 0, 'description': "Calibration offset value 2; see device's user guide for information on how to calibrate", 'min': 0.0, 'max': 1000.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'cc_gain0', 'type': 'double', 'default': 1.81704, 'level': 0, 'description': "Gain offset value 0; see device's user guide for information on how to calibrate", 'min': 0.0, 'max': 1000.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'cc_gain1', 'type': 'double', 'default': 1.81028, 'level': 0, 'description': "Gain offset value 1; see device's user guide for information on how to calibrate", 'min': 0.0, 'max': 1000.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'cc_gain2', 'type': 'double', 'default': 2.04819, 'level': 0, 'description': "Gain offset value 2; see device's user guide for information on how to calibrate", 'min': 0.0, 'max': 1000.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'cc_t0', 'type': 'double', 'default': 0.00142, 'level': 0, 'description': "T offset value 0; see device's user guide for information on how to calibrate", 'min': 0.0, 'max': 1000.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'cc_t1', 'type': 'double', 'default': -0.03591, 'level': 0, 'description': "T offset value 1; see device's user guide for information on how to calibrate", 'min': 0.0, 'max': 1000.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'cc_t2', 'type': 'double', 'default': 0.0016, 'level': 0, 'description': "T offset value 2; see device's user guide for information on how to calibrate", 'min': 0.0, 'max': 1000.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'cc_t3', 'type': 'double', 'default': -0.05038, 'level': 0, 'description': "T offset value 3; see device's user guide for information on how to calibrate", 'min': 0.0, 'max': 1000.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'cc_t4', 'type': 'double', 'default': -0.03942, 'level': 0, 'description': "T offset value 4; see device's user guide for information on how to calibrate", 'min': 0.0, 'max': 1000.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}, {'name': 'cc_t5', 'type': 'double', 'default': -0.05673, 'level': 0, 'description': "T offset value 5; see device's user guide for information on how to calibrate", 'min': 0.0, 'max': 1000.0, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'double', 'cconsttype': 'const double'}], 'groups': [], 'srcline': 246, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'class': 'DEFAULT', 'parentclass': '', 'parentname': 'Default', 'field': 'default', 'upper': 'DEFAULT', 'lower': 'groups'}

min = {}
max = {}
defaults = {}
level = {}
type = {}
all_level = 0

#def extract_params(config):
#    params = []
#    params.extend(config['parameters'])
#    for group in config['groups']:
#        params.extend(extract_params(group))
#    return params

for param in extract_params(config_description):
    min[param['name']] = param['min']
    max[param['name']] = param['max']
    defaults[param['name']] = param['default']
    level[param['name']] = param['level']
    type[param['name']] = param['type']
    all_level = all_level | param['level']

Spatial_None = 0
Spatial_AHRS = 1
Spatial_IMU = 2
