## *********************************************************
##
## File autogenerated for the robp_phidgets package
## by the dynamic_reconfigure package.
## Please do not edit.
##
## ********************************************************/

from dynamic_reconfigure.encoding import extract_params

inf = float('inf')

config_description = {'name': 'Default', 'type': '', 'state': True, 'cstate': 'true', 'id': 0, 'parent': 0, 'parameters': [{'name': 'logging', 'type': 'int', 'default': 4, 'level': 0, 'description': 'Level of Phidgets logging', 'min': 0, 'max': 6, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': "{'enum': [{'name': 'None', 'type': 'int', 'value': 0, 'srcline': 8, 'srcfile': '/home/robot/dd2419_ws/src/robp_robot/robp_phidgets/cfg/Logging.cfg', 'description': 'No logging', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Critical', 'type': 'int', 'value': 1, 'srcline': 9, 'srcfile': '/home/robot/dd2419_ws/src/robp_robot/robp_phidgets/cfg/Logging.cfg', 'description': 'Critical logging', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Error', 'type': 'int', 'value': 2, 'srcline': 10, 'srcfile': '/home/robot/dd2419_ws/src/robp_robot/robp_phidgets/cfg/Logging.cfg', 'description': 'Error logging', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Warning', 'type': 'int', 'value': 3, 'srcline': 11, 'srcfile': '/home/robot/dd2419_ws/src/robp_robot/robp_phidgets/cfg/Logging.cfg', 'description': 'Warning logging', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Info', 'type': 'int', 'value': 4, 'srcline': 12, 'srcfile': '/home/robot/dd2419_ws/src/robp_robot/robp_phidgets/cfg/Logging.cfg', 'description': 'Info logging', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Debug', 'type': 'int', 'value': 5, 'srcline': 13, 'srcfile': '/home/robot/dd2419_ws/src/robp_robot/robp_phidgets/cfg/Logging.cfg', 'description': 'Debug logging', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Verbose', 'type': 'int', 'value': 6, 'srcline': 14, 'srcfile': '/home/robot/dd2419_ws/src/robp_robot/robp_phidgets/cfg/Logging.cfg', 'description': 'Verbose logging', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'Phidgets logging level'}", 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'console', 'type': 'bool', 'default': False, 'level': 1, 'description': 'Log to console (otherwise to file)', 'min': False, 'max': True, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'rotate', 'type': 'bool', 'default': True, 'level': 2, 'description': 'Rotate the log file', 'min': False, 'max': True, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'bool', 'cconsttype': 'const bool'}, {'name': 'rotating_size', 'type': 'int', 'default': 10485760, 'level': 2, 'description': 'The file size above which the file should be rotated in bytes', 'min': 32768, 'max': 10485760, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'rotating_max_files', 'type': 'int', 'default': 1, 'level': 2, 'description': 'The number of log files that should be kept after rotation', 'min': 0, 'max': 64, 'srcline': 291, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'edit_method': '', 'ctype': 'int', 'cconsttype': 'const int'}], 'groups': [], 'srcline': 246, 'srcfile': '/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'class': 'DEFAULT', 'parentclass': '', 'parentname': 'Default', 'field': 'default', 'upper': 'DEFAULT', 'lower': 'groups'}

min = {}
max = {}
defaults = {}
level = {}
type = {}
all_level = 0

#def extract_params(config):
#    params = []
#    params.extend(config['parameters'])
#    for group in config['groups']:
#        params.extend(extract_params(group))
#    return params

for param in extract_params(config_description):
    min[param['name']] = param['min']
    max[param['name']] = param['max']
    defaults[param['name']] = param['default']
    level[param['name']] = param['level']
    type[param['name']] = param['type']
    all_level = all_level | param['level']

Logging_None = 0
Logging_Critical = 1
Logging_Error = 2
Logging_Warning = 3
Logging_Info = 4
Logging_Debug = 5
Logging_Verbose = 6
